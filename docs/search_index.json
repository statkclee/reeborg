[["index.html", "리보그 세상(Reeborg’s World) 리보그 세상", " 리보그 세상(Reeborg’s World) ANDRÉ ROBERGE, 이광춘 (번역) 2021-08-15 리보그 세상 "],["intro.html", "1 집 (Home) 1.1 Alone 1.2 Home 1 1.3 Home 2 1.4 Home 3 1.5 Home 4", " 1 집 (Home) 1.1 Alone 1.1.1 실행결과 1.1.2 코드 move() move() turn_left() move() 1.2 Home 1 1.2.1 실행결과 1.2.2 코드 move() move() 1.3 Home 2 1.3.1 실행결과 1.3.2 코드 move() move() 1.4 Home 3 1.4.1 실행결과 1.4.2 코드 move() move() turn_left() move() 1.5 Home 4 1.5.1 실행결과 1.5.2 코드 move() move() move() turn_left() move() move() move() turn_left() turn_left() turn_left() move() turn_left() turn_left() turn_left() move() move() move() turn_left() move() move() move() turn_left() turn_left() turn_left() move() turn_left() turn_left() turn_left() move() move() move() turn_left() move() move() move() turn_left() turn_left() turn_left() move() turn_left() turn_left() turn_left() move() move() move() turn_left() move() move() move() "],["around.html", "2 돌아다니기 (Around) 2.1 Around 1 2.2 Around 2 2.3 Around 3 2.4 Around 4", " 2 돌아다니기 (Around) 2.1 Around 1 2.1.1 실행결과 2.1.2 코드 repeat 4 : repeat 9 : move() turn_left() 2.2 Around 2 2.2.1 실행결과 2.2.2 코드 def turn_right(): turn_left() turn_left() turn_left() while front_is_clear() : move() if wall_in_front() : turn_left() if right_is_clear() : turn_right() 2.3 Around 3 2.3.1 실행결과 2.3.2 코드 def turn_right(): turn_left() turn_left() turn_left() repeat 46: if right_is_clear(): turn_right() move() elif front_is_clear(): move() else: turn_left() 2.4 Around 4 2.4.1 실행결과 2.4.2 코드 def turn_right(): turn_left() turn_left() turn_left() repeat 50: if right_is_clear(): turn_right() move() elif front_is_clear(): move() else: turn_left() "],["center.html", "3 중심 (center) 3.1 Center 1", " 3 중심 (center) 3.1 Center 1 3.1.1 실행결과 3.1.2 코드 repeat 4 : repeat 9 : move() turn_left() "],["harvest.html", "4 추수 (Harvest) 4.1 추수 1", " 4 추수 (Harvest) 4.1 추수 1 문제 바로가기 선행 지식 기본 함수 : move(), turn_left(), take() 테스트 함수 : object_here() 반복: while 혹은 if 과 결함 힌트: harvest_one_row() 함수를 작성하고 6번 반복 난이도: 3 참고: 리보그 세상 - 추가된 추수 도전과제 4.1.1 실행결과 4.1.2 코드 # 추수 위치로 이동 ---- def turn_right(): turn_left() turn_left() turn_left() def ready_harvest(): move() turn_left() move() move() turn_right() ready_harvest() # 한줄 추수 ---- def harvest_one_row(): if not object_here(): move() while object_here(): if object_here(): take() move() # harvest_one_row() # 다음 추수 위치로 이동 def turn_around(): turn_left() turn_left() def move_to_next_row(): turn_around() repeat 7: move() turn_right() move() turn_right() # move_to_next_row() # 전체 6줄 추수 repeat 6: harvest_one_row() move_to_next_row() "],["hurdle.html", "5 장애물 넘기 5.1 장애물 1 5.2 장애물 2 5.3 장애물 3 5.4 장애물 4", " 5 장애물 넘기 5.1 장애물 1 문제 바로가기 선행 지식 기본 함수 : move(), turn_left() 힌트: jump() 함수를 작성해서 프로그램 코드를 단순화시킬 수 있다. 난이도: 2 참고: 리보그 세상 - 추가된 추수 도전과제 5.1.1 실행결과 5.1.2 코드 def turn_right(): turn_left() turn_left() turn_left() def jump_over_hurdle(): move() turn_left() move() turn_right() move() turn_right() move() turn_left() # jump_over_hurdle() repeat 6: jump_over_hurdle() 5.2 장애물 2 문제 바로가기 선행 지식 기본 함수 : move(), turn_left() 조건 / 테스트 : at_goal() 혹은 부정(negation) 반복: while() 난이도: 3 5.2.1 실행결과 5.2.2 코드 def turn_right(): turn_left() turn_left() turn_left() def jump_over_hurdle(): move() turn_left() move() turn_right() move() turn_right() move() turn_left() # jump_over_hurdle() while not at_goal(): jump_over_hurdle() 5.3 장애물 3 문제 바로가기 선행 지식 기본 함수 : move(), turn_left() 조건 / 테스트 : at_goal(), front_is_clear(), wall_in_front(), 혹은 부정(negation) 반복과 제어: while() 루프와 if 문 난이도: 4 5.3.1 실행결과 5.3.2 코드 def turn_right(): turn_left() turn_left() turn_left() def jump_over_hurdle(): # move() &lt;-- 일반화를 위해 제거 turn_left() move() turn_right() move() turn_right() move() turn_left() # jump_over_hurdle() while not at_goal(): if front_is_clear(): move() elif wall_in_front(): jump_over_hurdle() 5.4 장애물 4 문제 바로가기 선행 지식 기본 함수 : move(), turn_left() 조건 / 테스트 : at_goal(), front_is_clear(), wall_in_front(), 혹은 부정(negation) 반복과 제어: while() 루프와 if 문 난이도: 4.5 장애물 4 프로그램은 장애물 1, 2, 3 프로그램도 정상 동작시킬 수 있어야 한다. 5.4.1 실행결과 5.4.2 코드 def turn_right(): turn_left() turn_left() turn_left() def jump_over_hurdles(): # 장애물 위쪽 올라가기 if wall_in_front(): turn_left() while not right_is_clear(): move() # 장애물 위를 넘어가기 turn_right() move() turn_right() # 장애물 내려오기 while front_is_clear(): move() # 다시 경주자세로 자세 갖추기 turn_left() while not at_goal(): if front_is_clear(): move() elif wall_in_front(): jump_over_hurdles() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
