[{"path":"index.html","id":"reeborg","chapter":"리보그 세상","heading":"리보그 세상","text":"리보그 세상(Reeborg’s World)는 컴퓨터 과학 언플러그드를 통해 전혀 컴퓨터가 없는 상태에서 주요 개념을 빠른 시간내에 잡을 수 있고, 이후 블록 프로그래밍(Block Programming)으로 MIT에서 개발한 스크래치(Scratch)와 타이디블록(Tidyblocks)를 통해 비쥬얼 프로그래밍을 즐길 수 있다. 그 다음 단계로 소프트웨어 프로그래밍 언어인 파이썬, 데이터 프로그래밍 언어인 R 로 바로 넘어가는 것이 아니라 move(), turn_left() 두개의 동사를 활용한 리보그 세상(Reeborg’s World)로 기초를 탄탄히 다져놓아야 한다.","code":""},{"path":"index.html","id":"rur-ple","chapter":"리보그 세상","heading":"0.1 러플","text":"리보그 세상(Reeborg’s World)은 러플(RUR-PLE)으로 André Roberge 박사가 2004년부터 2010년까지 PC 설치형 버젼 코딩 교육을 제작한 것으로 인기를 얻었고 한글 버젼도 러플(RUR-PLE) 웹사이트에서 확인 가능하다.","code":""},{"path":"index.html","id":"code-persepctive","chapter":"리보그 세상","heading":"0.2 프로그래밍과 문제해결","text":"미국 항공우주국(NASA) JPL(제트 추진 연구소) 연구원 안드레 카스타노가 미국 남가주 방과후 교육에 수년에 걸쳐 가다듬은 소프트웨어 및 문제해결 교육 과정을 제작하여 인터넷에 공개하였는 리보그 세상(Reeborg’s World) 초기 버젼을 기반으로 제작하였다. 프로그래밍과 문제해결 웹사이트를 참고한다.","code":""},{"path":"index.html","id":"reeborg-programming","chapter":"리보그 세상","heading":"0.3 리보그 기본 코딩방법","text":"스크래치(Scratch)와 타이디블록(Tidyblocks) 같은 블록 프로그래밍 언어가 WIMP를 활용한 클릭(click), 드래그(drag), 드랍(drop) 방식이라면 리보그는 별도 키보드가 있어 이를 활용하여 키보드와 편집기를 이용한 본격적인 프로그래밍 이전에 유용하게 활용할 수 있다.","code":""},{"path":"index.html","id":"useful-website","chapter":"리보그 세상","heading":"0.4 유용한 코딩 웹사이트","text":"컴퓨터 과학 언플러그드컴퓨터 과학 언플러그드TidyBlocksTidyBlocks모두를 위한 파이썬모두를 위한 파이썬소프트웨어 카펜트리소프트웨어 카펜트리데이터 과학데이터 과학글쓰기 저작\n컴퓨터 문서저작\n데이터 과학 기고문과 발표자료 사례\n글쓰기 저작컴퓨터 문서저작데이터 과학 기고문과 발표자료 사례한국 R 컨퍼런스한국 R 컨퍼런스","code":""},{"path":"intro.html","id":"intro","chapter":"1 집 (Home)","heading":"1 집 (Home)","text":"","code":""},{"path":"intro.html","id":"alone","chapter":"1 집 (Home)","heading":"1.1 Alone","text":"","code":"\nmove()\nmove()\nturn_left()\nmove()"},{"path":"intro.html","id":"실행결과","chapter":"1 집 (Home)","heading":"1.1.1 실행결과","text":"","code":""},{"path":"intro.html","id":"코드","chapter":"1 집 (Home)","heading":"1.1.2 코드","text":"","code":"\nmove()\nmove()\nturn_left()\nmove()"},{"path":"intro.html","id":"home-01","chapter":"1 집 (Home)","heading":"1.2 Home 1","text":"","code":"\nmove()\nmove()"},{"path":"intro.html","id":"실행결과-1","chapter":"1 집 (Home)","heading":"1.2.1 실행결과","text":"","code":""},{"path":"intro.html","id":"코드-1","chapter":"1 집 (Home)","heading":"1.2.2 코드","text":"","code":"\nmove()\nmove()"},{"path":"intro.html","id":"home-02","chapter":"1 집 (Home)","heading":"1.3 Home 2","text":"","code":"\nmove()\nmove()"},{"path":"intro.html","id":"실행결과-2","chapter":"1 집 (Home)","heading":"1.3.1 실행결과","text":"","code":""},{"path":"intro.html","id":"코드-2","chapter":"1 집 (Home)","heading":"1.3.2 코드","text":"","code":"\nmove()\nmove()"},{"path":"intro.html","id":"home-03","chapter":"1 집 (Home)","heading":"1.4 Home 3","text":"","code":"\nmove()\nmove()\nturn_left()\nmove()"},{"path":"intro.html","id":"실행결과-3","chapter":"1 집 (Home)","heading":"1.4.1 실행결과","text":"","code":""},{"path":"intro.html","id":"코드-3","chapter":"1 집 (Home)","heading":"1.4.2 코드","text":"","code":"\nmove()\nmove()\nturn_left()\nmove()"},{"path":"intro.html","id":"home-04","chapter":"1 집 (Home)","heading":"1.5 Home 4","text":"","code":"\nmove()\nmove()\nmove()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nmove()\nmove()\nmove()"},{"path":"intro.html","id":"실행결과-4","chapter":"1 집 (Home)","heading":"1.5.1 실행결과","text":"","code":""},{"path":"intro.html","id":"코드-4","chapter":"1 집 (Home)","heading":"1.5.2 코드","text":"","code":"\nmove()\nmove()\nmove()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nturn_left()\nturn_left()\nturn_left()\nmove()\nmove()\nmove()\nturn_left()\nmove()\nmove()\nmove()"},{"path":"around.html","id":"around","chapter":"2 돌아다니기 (Around)","heading":"2 돌아다니기 (Around)","text":"","code":""},{"path":"around.html","id":"around-01","chapter":"2 돌아다니기 (Around)","heading":"2.1 Around 1","text":"","code":"repeat 4 :\n    repeat 9 :\n        move()\n    turn_left()"},{"path":"around.html","id":"실행결과-5","chapter":"2 돌아다니기 (Around)","heading":"2.1.1 실행결과","text":"","code":""},{"path":"around.html","id":"코드-5","chapter":"2 돌아다니기 (Around)","heading":"2.1.2 코드","text":"","code":"repeat 4 :\n    repeat 9 :\n        move()\n    turn_left()"},{"path":"around.html","id":"around-02","chapter":"2 돌아다니기 (Around)","heading":"2.2 Around 2","text":"리보그가 토큰(token)을 가지고 다니는 점을 이용하여 리보그 세상을 한바퀴 삥 둘러 돌아다닌 후에 제자리로 돌아온 위치를 표식하고 이를 프로그램 종료 조건으로 설정한다.","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\n# 목표지점 표식    \ndef drop_token():\n    put(\"token\")\n\ndrop_token()\nmove()\n\nwhile not object_here():\n    move()\n    if wall_in_front() :\n        turn_left()\n    if right_is_clear() :\n        turn_right()\n        move()"},{"path":"around.html","id":"실행결과-6","chapter":"2 돌아다니기 (Around)","heading":"2.2.1 실행결과","text":"","code":""},{"path":"around.html","id":"코드-6","chapter":"2 돌아다니기 (Around)","heading":"2.2.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\n# 목표지점 표식    \ndef drop_token():\n    put(\"token\")\n\ndrop_token()\nmove()\n\nwhile not object_here():\n    move()\n    if wall_in_front() :\n        turn_left()\n    if right_is_clear() :\n        turn_right()\n        move()"},{"path":"around.html","id":"around-03","chapter":"2 돌아다니기 (Around)","heading":"2.3 Around 3","text":"Around 2와 마찬가지로 토큰을 떨어뜨려 표식을 하고 자리를 한칸 이동한 후에 돌아다니는 작업을 수행한다.","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\n# 목표지점 표식    \ndef drop_token():\n    put(\"token\")\n\ndrop_token()\nturn_left()\nmove()\n\nwhile not object_here():\n    if right_is_clear():\n        turn_right()\n        move()\n    elif front_is_clear():\n        move()\n    else:\n        turn_left()"},{"path":"around.html","id":"실행결과-7","chapter":"2 돌아다니기 (Around)","heading":"2.3.1 실행결과","text":"","code":""},{"path":"around.html","id":"코드-7","chapter":"2 돌아다니기 (Around)","heading":"2.3.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\n# 목표지점 표식    \ndef drop_token():\n    put(\"token\")\n\ndrop_token()\nturn_left()\nmove()\n\nwhile not object_here():\n    if right_is_clear():\n        turn_right()\n        move()\n    elif front_is_clear():\n        move()\n    else:\n        turn_left()"},{"path":"around.html","id":"around-04","chapter":"2 돌아다니기 (Around)","heading":"2.4 Around 4","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef turn_around():\n    turn_left()\n    turn_left()\n    \n    \n# 목표지점 표식    \ndef drop_token():\n    put(\"token\")\n\ndrop_token()\nturn_around()\nmove()\n\nwhile not object_here():\n    if right_is_clear():\n        turn_right()\n        move()\n    elif front_is_clear():\n        move()\n    else:\n        turn_left()"},{"path":"around.html","id":"실행결과-8","chapter":"2 돌아다니기 (Around)","heading":"2.4.1 실행결과","text":"","code":""},{"path":"around.html","id":"코드-8","chapter":"2 돌아다니기 (Around)","heading":"2.4.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef turn_around():\n    turn_left()\n    turn_left()\n    \n    \n# 목표지점 표식    \ndef drop_token():\n    put(\"token\")\n\ndrop_token()\nturn_around()\nmove()\n\nwhile not object_here():\n    if right_is_clear():\n        turn_right()\n        move()\n    elif front_is_clear():\n        move()\n    else:\n        turn_left()"},{"path":"center.html","id":"center","chapter":"3 중심 (center)","heading":"3 중심 (center)","text":"","code":""},{"path":"center.html","id":"center-01","chapter":"3 중심 (center)","heading":"3.1 중심 찾기 1","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), put()\n테스트 조건: front_is_clear(), wall_in_front(), object_here()\n반복 및 제어: 루프, 문\n난이도: 5\n기본 함수 : move(), turn_left(), put()테스트 조건: front_is_clear(), wall_in_front(), object_here()반복 및 제어: 루프, 문난이도: 5","code":"def turn_around():\n    turn_left()\n    turn_left()\n    \n# 환경설정 ------------------    \ndef put_tokens():\n    ## 토큰 양 끝에 두기 ----\n    put()\n    while front_is_clear():\n        move()\n    put()\n    ## 제자리 돌아오기 -----\n    turn_around()\n    while front_is_clear():\n        move()\n    turn_around()\n    \nput_tokens()    \n\n# 토큰 이동 ------------------    \n\ndef pick_and_put():    \n    take()\n    move()\n    put()\n    move()\n\ndef move_left_to_right():\n    if object_here():\n        pick_and_put()\n        while not object_here():\n            move()\n\ndef move_right_to_left():\n    turn_around()\n    if object_here():\n        pick_and_put()\n        while not object_here():\n            move()\n\ndef move_left_right_tokens() :\n    move_left_to_right()\n    move_right_to_left()           \n    turn_around()\n\n  \nmove_left_right_tokens()\nmove_left_right_tokens()\nmove_left_right_tokens()\nmove_left_right_tokens()"},{"path":"center.html","id":"실행결과-9","chapter":"3 중심 (center)","heading":"3.1.1 실행결과","text":"","code":""},{"path":"center.html","id":"코드-9","chapter":"3 중심 (center)","heading":"3.1.2 코드","text":"","code":"def turn_around():\n    turn_left()\n    turn_left()\n    \n# 환경설정 ------------------    \ndef put_tokens():\n    ## 토큰 양 끝에 두기 ----\n    put()\n    while front_is_clear():\n        move()\n    put()\n    ## 제자리 돌아오기 -----\n    turn_around()\n    while front_is_clear():\n        move()\n    turn_around()\n    \nput_tokens()    \n\n# 토큰 이동 ------------------    \n\ndef pick_and_put():    \n    take()\n    move()\n    put()\n    move()\n\ndef move_left_to_right():\n    if object_here():\n        pick_and_put()\n        while not object_here():\n            move()\n\ndef move_right_to_left():\n    turn_around()\n    if object_here():\n        pick_and_put()\n        while not object_here():\n            move()\n\ndef move_left_right_tokens() :\n    move_left_to_right()\n    move_right_to_left()           \n    turn_around()\n\n  \nmove_left_right_tokens()\nmove_left_right_tokens()\nmove_left_right_tokens()\nmove_left_right_tokens()"},{"path":"harvest.html","id":"harvest","chapter":"4 추수 (Harvest)","heading":"4 추수 (Harvest)","text":"","code":""},{"path":"harvest.html","id":"harvest-01","chapter":"4 추수 (Harvest)","heading":"4.1 추수 1","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), take()\n테스트 함수 : object_here()\n반복: 혹은 과 결함\n기본 함수 : move(), turn_left(), take()테스트 함수 : object_here()반복: 혹은 과 결함힌트: harvest_one_row() 함수를 작성하고 6번 반복난이도: 3참고: 리보그 세상 - 추가된 추수 도전과제","code":"# 추수 위치로 이동 ----\ndef turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef ready_harvest():\n    move()\n    turn_left()\n    move()\n    move()\n    turn_right()\n  \nready_harvest()\n\n# 한줄 추수 ----\ndef harvest_one_row():\n    if not object_here():\n        move()\n    while object_here():\n        if object_here():\n            take()\n        move()\n          \n# harvest_one_row()\n\n# 다음 추수 위치로 이동\ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_to_next_row():    \n    turn_around()\n    repeat 7:\n        move()\n    turn_right()\n    move()\n    turn_right()\n    \n# move_to_next_row()\n\n# 전체 6줄 추수\n\nrepeat 6:\n    harvest_one_row()\n    move_to_next_row()"},{"path":"harvest.html","id":"실행결과-10","chapter":"4 추수 (Harvest)","heading":"4.1.1 실행결과","text":"","code":""},{"path":"harvest.html","id":"코드-10","chapter":"4 추수 (Harvest)","heading":"4.1.2 코드","text":"","code":"# 추수 위치로 이동 ----\ndef turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef ready_harvest():\n    move()\n    turn_left()\n    move()\n    move()\n    turn_right()\n  \nready_harvest()\n\n# 한줄 추수 ----\ndef harvest_one_row():\n    if not object_here():\n        move()\n    while object_here():\n        if object_here():\n            take()\n        move()\n          \n# harvest_one_row()\n\n# 다음 추수 위치로 이동\ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_to_next_row():    \n    turn_around()\n    repeat 7:\n        move()\n    turn_right()\n    move()\n    turn_right()\n    \n# move_to_next_row()\n\n# 전체 6줄 추수\n\nrepeat 6:\n    harvest_one_row()\n    move_to_next_row()"},{"path":"harvest.html","id":"harvest-02","chapter":"4 추수 (Harvest)","heading":"4.2 추수 2","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), take()\n테스트 함수 : object_here()\n반복: 혹은 과 결함\n기본 함수 : move(), turn_left(), take()테스트 함수 : object_here()반복: 혹은 과 결함힌트: harvest_one_row() 함수를 작성하고 6번 반복난이도: 4참고: 리보그 세상 - 추가된 추수 도전과제","code":"# 추수 위치로 이동 ----\ndef turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef ready_harvest():\n    move()\n    turn_left()\n    move()\n    move()\n    turn_right()\n  \nready_harvest()\n\n# 한줄 추수 ----\ndef harvest_one_row():\n    repeat 6:\n        if not object_here():\n            move()\n        while object_here():\n            take()\n\n# 다음 추수 위치로 이동\ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_to_next_row():    \n    turn_around()\n    repeat 6:\n        move()\n    turn_right()\n    move()\n    turn_right()\n\n# 전체 6줄 추수\n\nrepeat 6:\n    harvest_one_row()\n    move_to_next_row()"},{"path":"harvest.html","id":"실행결과-11","chapter":"4 추수 (Harvest)","heading":"4.2.1 실행결과","text":"","code":""},{"path":"harvest.html","id":"코드-11","chapter":"4 추수 (Harvest)","heading":"4.2.2 코드","text":"","code":"# 추수 위치로 이동 ----\ndef turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef ready_harvest():\n    move()\n    turn_left()\n    move()\n    move()\n    turn_right()\n  \nready_harvest()\n\n# 한줄 추수 ----\ndef harvest_one_row():\n    repeat 6:\n        if not object_here():\n            move()\n        while object_here():\n            take()\n\n# 다음 추수 위치로 이동\ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_to_next_row():    \n    turn_around()\n    repeat 6:\n        move()\n    turn_right()\n    move()\n    turn_right()\n\n# 전체 6줄 추수\n\nrepeat 6:\n    harvest_one_row()\n    move_to_next_row()"},{"path":"harvest.html","id":"harvest-03","chapter":"4 추수 (Harvest)","heading":"4.3 추수 3","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), take()\n테스트 함수 : object_here()\n반복: 혹은 과 결함\n기본 함수 : move(), turn_left(), take()테스트 함수 : object_here()반복: 혹은 과 결함힌트: harvest_one_row() 함수를 작성하고 6번 반복난이도: 4참고: 리보그 세상 - 추가된 추수 도전과제","code":"# 추수 위치로 이동 ----\ndef turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef ready_harvest():\n    move()\n    move()\n    turn_left()\n    move()\n    move()\n    turn_right()\n  \nready_harvest()\n\n# 당근 심기 ----\ndef fix_one_row():\n    repeat 6:\n        while not object_here():\n            put()\n        # 당근 1개 이상인 경우 다 뽑아내고 1개 심는다.            \n        if object_here():\n            while object_here():\n                take()\n            put()\n            move()\n\n# 다음 추수 위치로 이동\ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_to_next_row():    \n    turn_around()\n    repeat 6:\n        move()\n    turn_right()\n    move()\n    turn_right()\n\n# 전체 6줄 추수\n\nrepeat 6:\n    fix_one_row()\n    move_to_next_row()"},{"path":"harvest.html","id":"실행결과-12","chapter":"4 추수 (Harvest)","heading":"4.3.1 실행결과","text":"","code":""},{"path":"harvest.html","id":"코드-12","chapter":"4 추수 (Harvest)","heading":"4.3.2 코드","text":"","code":"# 추수 위치로 이동 ----\ndef turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef ready_harvest():\n    move()\n    move()\n    turn_left()\n    move()\n    move()\n    turn_right()\n  \nready_harvest()\n\n# 당근 심기 ----\ndef fix_one_row():\n    repeat 6:\n        while not object_here():\n            put()\n        # 당근 1개 이상인 경우 다 뽑아내고 1개 심는다.            \n        if object_here():\n            while object_here():\n                take()\n            put()\n            move()\n\n# 다음 추수 위치로 이동\ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef move_to_next_row():    \n    turn_around()\n    repeat 6:\n        move()\n    turn_right()\n    move()\n    turn_right()\n\n# 전체 6줄 추수\n\nrepeat 6:\n    fix_one_row()\n    move_to_next_row()"},{"path":"hurdle.html","id":"hurdle","chapter":"5 장애물 넘기","heading":"5 장애물 넘기","text":"","code":""},{"path":"hurdle.html","id":"hurdle-01","chapter":"5 장애물 넘기","heading":"5.1 장애물 1","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left()\n기본 함수 : move(), turn_left()힌트: jump() 함수를 작성해서 프로그램 코드를 단순화시킬 수 있다.난이도: 2참고: 리보그 세상 - 추가된 추수 도전과제","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef jump_over_hurdle():    \n    move()\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\n# jump_over_hurdle()    \n\nrepeat 6:\n   jump_over_hurdle()"},{"path":"hurdle.html","id":"실행결과-13","chapter":"5 장애물 넘기","heading":"5.1.1 실행결과","text":"","code":""},{"path":"hurdle.html","id":"코드-13","chapter":"5 장애물 넘기","heading":"5.1.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef jump_over_hurdle():    \n    move()\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\n# jump_over_hurdle()    \n\nrepeat 6:\n   jump_over_hurdle()"},{"path":"hurdle.html","id":"hurdle-02","chapter":"5 장애물 넘기","heading":"5.2 장애물 2","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left()\n조건 / 테스트 : at_goal() 혹은 부정(negation)\n반복: ()\n기본 함수 : move(), turn_left()조건 / 테스트 : at_goal() 혹은 부정(negation)반복: ()난이도: 3","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef jump_over_hurdle():    \n    move()\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\n# jump_over_hurdle()    \n\nwhile not at_goal():\n    jump_over_hurdle()"},{"path":"hurdle.html","id":"실행결과-14","chapter":"5 장애물 넘기","heading":"5.2.1 실행결과","text":"","code":""},{"path":"hurdle.html","id":"코드-14","chapter":"5 장애물 넘기","heading":"5.2.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef jump_over_hurdle():    \n    move()\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\n# jump_over_hurdle()    \n\nwhile not at_goal():\n    jump_over_hurdle()"},{"path":"hurdle.html","id":"hurdle-03","chapter":"5 장애물 넘기","heading":"5.3 장애물 3","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left()\n조건 / 테스트 : at_goal(), front_is_clear(), wall_in_front(), 혹은 부정(negation)\n반복과 제어: () 루프와 문\n기본 함수 : move(), turn_left()조건 / 테스트 : at_goal(), front_is_clear(), wall_in_front(), 혹은 부정(negation)반복과 제어: () 루프와 문난이도: 4","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef jump_over_hurdle():\n    # move() <-- 일반화를 위해 제거\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\n# jump_over_hurdle()    \n\nwhile not at_goal():\n    if front_is_clear():\n        move()\n    elif wall_in_front():\n        jump_over_hurdle()"},{"path":"hurdle.html","id":"실행결과-15","chapter":"5 장애물 넘기","heading":"5.3.1 실행결과","text":"","code":""},{"path":"hurdle.html","id":"코드-15","chapter":"5 장애물 넘기","heading":"5.3.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef jump_over_hurdle():\n    # move() <-- 일반화를 위해 제거\n    turn_left()\n    move()\n    turn_right()\n    move()\n    turn_right()\n    move()\n    turn_left()\n\n# jump_over_hurdle()    \n\nwhile not at_goal():\n    if front_is_clear():\n        move()\n    elif wall_in_front():\n        jump_over_hurdle()"},{"path":"hurdle.html","id":"hurdle-04","chapter":"5 장애물 넘기","heading":"5.4 장애물 4","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left()\n조건 / 테스트 : at_goal(), front_is_clear(), wall_in_front(), 혹은 부정(negation)\n반복과 제어: () 루프와 문\n기본 함수 : move(), turn_left()조건 / 테스트 : at_goal(), front_is_clear(), wall_in_front(), 혹은 부정(negation)반복과 제어: () 루프와 문난이도: 4.5장애물 4 프로그램은 장애물 1, 2, 3 프로그램도 정상 동작시킬 수 있어야 한다.","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef jump_over_hurdles():\n    # 장애물 위쪽 올라가기\n    if wall_in_front():\n        turn_left()\n        while not right_is_clear():\n            move()\n    # 장애물 위를 넘어가기            \n    turn_right()\n    move()\n    turn_right()\n    # 장애물 내려오기\n    while front_is_clear():\n        move()\n    # 다시 경주자세로 자세 갖추기\n    turn_left()\n\nwhile not at_goal():\n    if front_is_clear():\n        move()\n    elif wall_in_front():\n        jump_over_hurdles()"},{"path":"hurdle.html","id":"실행결과-16","chapter":"5 장애물 넘기","heading":"5.4.1 실행결과","text":"","code":""},{"path":"hurdle.html","id":"코드-16","chapter":"5 장애물 넘기","heading":"5.4.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef jump_over_hurdles():\n    # 장애물 위쪽 올라가기\n    if wall_in_front():\n        turn_left()\n        while not right_is_clear():\n            move()\n    # 장애물 위를 넘어가기            \n    turn_right()\n    move()\n    turn_right()\n    # 장애물 내려오기\n    while front_is_clear():\n        move()\n    # 다시 경주자세로 자세 갖추기\n    turn_left()\n\nwhile not at_goal():\n    if front_is_clear():\n        move()\n    elif wall_in_front():\n        jump_over_hurdles()"},{"path":"rains.html","id":"rains","chapter":"6 비바람 창문 닫기","heading":"6 비바람 창문 닫기","text":"","code":""},{"path":"rains.html","id":"rain-01","chapter":"6 비바람 창문 닫기","heading":"6.1 창문 닫기 1","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), build_wall()\n기본 함수 : move(), turn_left(), build_wall()난이도: 1참고: 러플 - 비가 와요","code":"def turn_around():\n    turn_left()    \n    turn_left()\n\ndef close_window():\n    repeat 6:\n        move()\n    build_wall()    \n\ndef go_to_home():\n    turn_around()    \n    repeat 5:\n        move()\n\nclose_window()        \ngo_to_home()"},{"path":"rains.html","id":"실행결과-17","chapter":"6 비바람 창문 닫기","heading":"6.1.1 실행결과","text":"","code":""},{"path":"rains.html","id":"코드-17","chapter":"6 비바람 창문 닫기","heading":"6.1.2 코드","text":"","code":"def turn_around():\n    turn_left()    \n    turn_left()\n\ndef close_window():\n    repeat 6:\n        move()\n    build_wall()    \n\ndef go_to_home():\n    turn_around()    \n    repeat 5:\n        move()\n\nclose_window()        \ngo_to_home()"},{"path":"rains.html","id":"rain-02","chapter":"6 비바람 창문 닫기","heading":"6.2 창문 닫기 2","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), build_wall()\n테스트 조건: right_is_clear(), wall_on_right(), at_goal()\n반복 및 제어: 루프, 문\n기본 함수 : move(), turn_left(), build_wall()테스트 조건: right_is_clear(), wall_on_right(), at_goal()반복 및 제어: 루프, 문난이도: 5참고: 러플 - 비가 와요","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\n    \ndef move_to_goal():\n    move()\n    turn_right()\n\nmove_to_goal()\nmove() \n\nwhile not at_goal():\n    if front_is_clear():\n        move()\n    if wall_in_front():\n        turn_left()\n    if right_is_clear():\n        turn_right()\n        build_wall()\n        turn_left()"},{"path":"rains.html","id":"실행결과-18","chapter":"6 비바람 창문 닫기","heading":"6.2.1 실행결과","text":"","code":""},{"path":"rains.html","id":"코드-18","chapter":"6 비바람 창문 닫기","heading":"6.2.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\n    \ndef move_to_goal():\n    move()\n    turn_right()\n\nmove_to_goal()\nmove() \n\nwhile not at_goal():\n    if front_is_clear():\n        move()\n    if wall_in_front():\n        turn_left()\n    if right_is_clear():\n        turn_right()\n        build_wall()\n        turn_left()"},{"path":"rains.html","id":"rain-03","chapter":"6 비바람 창문 닫기","heading":"6.3 창문 닫기 3","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), build_wall()\n테스트 조건: right_is_clear(), wall_on_right(), at_goal()\n반복 및 제어: 루프, 문\n기본 함수 : move(), turn_left(), build_wall()테스트 조건: right_is_clear(), wall_on_right(), at_goal()반복 및 제어: 루프, 문힌트: 우회전할지 창문을 닫을지 리보그를 한번더 이동시키면 2가지 경우가 존재한다.난이도: 8참고: 러플 - 비가 와요","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef move_to_goal():\n    repeat 3:\n        move()\n    turn_right()\n\nmove_to_goal()\nmove() \n\ndef go_back():\n    turn_left()\n    turn_left()\n    move()\n    turn_left()\n    turn_left()\n    \ndef close_window():\n    turn_right()\n    build_wall()\n    turn_left()\n\nwhile not at_goal():\n    if wall_in_front():\n        turn_left()\n    if front_is_clear() and right_is_clear():    \n        move()\n        if right_is_clear():\n            go_back()\n            turn_right()\n        elif not right_is_clear():    \n            go_back()            \n            close_window()\n    move()"},{"path":"rains.html","id":"실행결과-19","chapter":"6 비바람 창문 닫기","heading":"6.3.1 실행결과","text":"","code":""},{"path":"rains.html","id":"코드-19","chapter":"6 비바람 창문 닫기","heading":"6.3.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \ndef move_to_goal():\n    repeat 3:\n        move()\n    turn_right()\n\nmove_to_goal()\nmove() \n\ndef go_back():\n    turn_left()\n    turn_left()\n    move()\n    turn_left()\n    turn_left()\n    \ndef close_window():\n    turn_right()\n    build_wall()\n    turn_left()\n\nwhile not at_goal():\n    if wall_in_front():\n        turn_left()\n    if front_is_clear() and right_is_clear():    \n        move()\n        if right_is_clear():\n            go_back()\n            turn_right()\n        elif not right_is_clear():    \n            go_back()            \n            close_window()\n    move()"},{"path":"rain.html","id":"rain","chapter":"7 토큰","heading":"7 토큰","text":"","code":""},{"path":"rain.html","id":"token-01","chapter":"7 토큰","heading":"7.1 토큰 이동 1","text":"문제 바로가기선행 지식\n기본 함수 : move(), put(), take()\n기본 함수 : move(), put(), take()난이도: 1","code":"move()\ntake()\nmove()\nput()\nmove()"},{"path":"rain.html","id":"실행결과-20","chapter":"7 토큰","heading":"7.1.1 실행결과","text":"","code":""},{"path":"rain.html","id":"코드-20","chapter":"7 토큰","heading":"7.1.2 코드","text":"","code":"move()\ntake()\nmove()\nput()\nmove()"},{"path":"rain.html","id":"token-02","chapter":"7 토큰","heading":"7.2 토큰 이동 2","text":"문제 바로가기선행 지식\n기본 함수 : move(), put(), take()\n기본 함수 : move(), put(), take()난이도: 1move_until_done() 함수를 제작해서 if문을 사용하게 되면 조금더 깔끔하게 목적을 달성할 수 있다.","code":"def move_until_done():\n    move()\n    if object_here():\n        take()\n        move()\n        put()\n        \nrepeat 5:\n    move_until_done()"},{"path":"rain.html","id":"실행결과-21","chapter":"7 토큰","heading":"7.2.1 실행결과","text":"","code":""},{"path":"rain.html","id":"코드-21","chapter":"7 토큰","heading":"7.2.2 코드","text":"","code":"def move_until_done():\n    move()\n    if object_here():\n        take()\n        move()\n        put()\n        \nrepeat 5:\n    move_until_done()"},{"path":"rain.html","id":"token-03","chapter":"7 토큰","heading":"7.3 토큰 이동 3","text":"문제 바로가기선행 지식\n기본 함수 : move(), put(), take()\n테스트 조건: object_here(), at_goal()\n반복과 제어조건: 루프와 부정(negation)\n기본 함수 : move(), put(), take()테스트 조건: object_here(), at_goal()반복과 제어조건: 루프와 부정(negation)난이도: 3","code":"def move_until_done():\n    move()\n    if object_here():\n        take()\n        move()\n        put()\n        \nwhile not at_goal():\n    move_until_done()"},{"path":"rain.html","id":"실행결과-22","chapter":"7 토큰","heading":"7.3.1 실행결과","text":"","code":""},{"path":"rain.html","id":"코드-22","chapter":"7 토큰","heading":"7.3.2 코드","text":"","code":"def move_until_done():\n    move()\n    if object_here():\n        take()\n        move()\n        put()\n        \nwhile not at_goal():\n    move_until_done()"},{"path":"rain.html","id":"token-04","chapter":"7 토큰","heading":"7.4 토큰 이동 4","text":"문제 바로가기선행 지식\n기본 함수 : move(), put(), take()\n테스트 조건: object_here(), carries_object(), at_goal()\n반복과 제어조건: 루프, 문과 부정(negation)\n기본 함수 : move(), put(), take()테스트 조건: object_here(), carries_object(), at_goal()반복과 제어조건: 루프, 문과 부정(negation)난이도: 5","code":"def collect_all():\n    if object_here():\n        take()\n    move()\n\ndef put_down_all_and_move():\n    while carries_object():\n        put()\n    move()\n    \nwhile not at_goal():\n    if object_here():\n        collect_all()\n    elif carries_object():\n        put_down_all_and_move()  \n    else:\n        move()"},{"path":"rain.html","id":"실행결과-23","chapter":"7 토큰","heading":"7.4.1 실행결과","text":"","code":""},{"path":"rain.html","id":"코드-23","chapter":"7 토큰","heading":"7.4.2 코드","text":"","code":"def collect_all():\n    if object_here():\n        take()\n    move()\n\ndef put_down_all_and_move():\n    while carries_object():\n        put()\n    move()\n    \nwhile not at_goal():\n    if object_here():\n        collect_all()\n    elif carries_object():\n        put_down_all_and_move()  \n    else:\n        move()"},{"path":"rain.html","id":"token-05","chapter":"7 토큰","heading":"7.5 토큰 이동 5","text":"토큰 이동 5를 일반화하여 토큰이 있는 곳과 그렇지 않는 곳도 리보그가 이동하여 목적을 달성할 수 있도록 한다.문제 바로가기선행 지식\n기본 함수 : move(), put(), take()\n테스트 조건: object_here(), carries_object(), at_goal()\n반복과 제어조건: 루프, 문과 부정(negation)\n기본 함수 : move(), put(), take()테스트 조건: object_here(), carries_object(), at_goal()반복과 제어조건: 루프, 문과 부정(negation)난이도: 5","code":"def collect_all():\n    if object_here():\n        take()\n    move()\n\ndef put_down_all_and_move():\n    while carries_object():\n        put()\n    move()\n    \nwhile not at_goal():\n    if object_here():\n        collect_all()\n    elif carries_object():\n        put_down_all_and_move()  \n    else:\n        move()"},{"path":"rain.html","id":"실행결과-24","chapter":"7 토큰","heading":"7.5.1 실행결과","text":"","code":""},{"path":"rain.html","id":"코드-24","chapter":"7 토큰","heading":"7.5.2 코드","text":"","code":"def collect_all():\n    if object_here():\n        take()\n    move()\n\ndef put_down_all_and_move():\n    while carries_object():\n        put()\n    move()\n    \nwhile not at_goal():\n    if object_here():\n        collect_all()\n    elif carries_object():\n        put_down_all_and_move()  \n    else:\n        move()"},{"path":"newspaper.html","id":"newspaper","chapter":"8 신문배달","heading":"8 신문배달","text":"","code":""},{"path":"newspaper.html","id":"newspaper-01","chapter":"8 신문배달","heading":"8.1 신문배달 1","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), take(), put()\n기본 함수 : move(), turn_left(), take(), put()난이도: 1","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\n# 계단 올라가기 ----    \ntake()\nturn_left()\nmove()\nturn_right()\n\nmove()\nmove()\n\nturn_left()\nmove()\nturn_right()\n\nmove()\nmove()\n\nturn_left()\nmove()\nturn_right()\n\nmove()\nmove()\nput()\n\n# 계단 내려오기 ----\nturn_left()\nturn_left()\nmove()\nmove()\nturn_left()\nmove()\n\nturn_right()\nmove()\nmove()\n\nturn_left()\nmove()\nturn_right()\n\nmove()\nmove()\n\nturn_left()\nmove()"},{"path":"newspaper.html","id":"실행결과-25","chapter":"8 신문배달","heading":"8.1.1 실행결과","text":"","code":""},{"path":"newspaper.html","id":"코드-25","chapter":"8 신문배달","heading":"8.1.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\n# 계단 올라가기 ----    \ntake()\nturn_left()\nmove()\nturn_right()\n\nmove()\nmove()\n\nturn_left()\nmove()\nturn_right()\n\nmove()\nmove()\n\nturn_left()\nmove()\nturn_right()\n\nmove()\nmove()\nput()\n\n# 계단 내려오기 ----\nturn_left()\nturn_left()\nmove()\nmove()\nturn_left()\nmove()\n\nturn_right()\nmove()\nmove()\n\nturn_left()\nmove()\nturn_right()\n\nmove()\nmove()\n\nturn_left()\nmove()"},{"path":"newspaper.html","id":"newspaper-02","chapter":"8 신문배달","heading":"8.2 신문배달 2","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), take(), put()\n기본 함수 : move(), turn_left(), take(), put()난이도: 3힌트: up_three_steps(), down_three_steps(), turn_around() 함수를 제작하여 MS. Ada Lovelace에게 전달되는 신문업무를 모듈화시키고 take(\"token\") 함수를 호출하여 댓가를 선물로 받아 집으로 돌아온다.","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef up_three_steps():\n    repeat 3:\n        turn_left()\n        move()\n        turn_right()\n        move()\n        move()\n\ndef down_three_steps():\n    repeat 3:\n        move()\n        move()\n        turn_left()\n        move()\n        turn_right()\n\n# 신문 배달 시작\ntake()\n# 계단 올라가서 러브레이스 도착\nup_three_steps()\n# 신문 높고 토큰 받기\nput()\nwhile object_here(\"token\"):\n    take(\"token\")\n# 되돌아 집에 오기    \nturn_around()\ndown_three_steps()"},{"path":"newspaper.html","id":"실행결과-26","chapter":"8 신문배달","heading":"8.2.1 실행결과","text":"","code":""},{"path":"newspaper.html","id":"코드-26","chapter":"8 신문배달","heading":"8.2.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef turn_around():\n    turn_left()\n    turn_left()\n\ndef up_three_steps():\n    repeat 3:\n        turn_left()\n        move()\n        turn_right()\n        move()\n        move()\n\ndef down_three_steps():\n    repeat 3:\n        move()\n        move()\n        turn_left()\n        move()\n        turn_right()\n\n# 신문 배달 시작\ntake()\n# 계단 올라가서 러브레이스 도착\nup_three_steps()\n# 신문 높고 토큰 받기\nput()\nwhile object_here(\"token\"):\n    take(\"token\")\n# 되돌아 집에 오기    \nturn_around()\ndown_three_steps()"},{"path":"maze.html","id":"maze","chapter":"9 미로 탈출","heading":"9 미로 탈출","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left()\n테스트 조건: front_is_clear(), wall_in_front(), right_is_clear(), wall_on_right(), at_goal()\n반복 루프, /elif/else 조건 문\n기본 함수 : move(), turn_left()테스트 조건: front_is_clear(), wall_in_front(), right_is_clear(), wall_on_right(), at_goal()반복 루프, /elif/else 조건 문난이도: 4","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \nwhile not at_goal():\n\n    if right_is_clear():\n        turn_right()\n        move()\n    elif front_is_clear():\n        move()\n    else:\n        turn_left()    "},{"path":"maze.html","id":"실행결과-27","chapter":"9 미로 탈출","heading":"9.0.1 실행결과","text":"","code":""},{"path":"maze.html","id":"코드-27","chapter":"9 미로 탈출","heading":"9.0.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n    \nwhile not at_goal():\n\n    if right_is_clear():\n        turn_right()\n        move()\n    elif front_is_clear():\n        move()\n    else:\n        turn_left()    "},{"path":"storm.html","id":"storm","chapter":"10 폭풍 후에 …","heading":"10 폭풍 후에 …","text":"","code":""},{"path":"storm.html","id":"storm-01","chapter":"10 폭풍 후에 …","heading":"10.1 낙엽 청소 1","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), take(), toss()\n테스트 조건: object_here(), carries_object(), front_is_clear(), wall_in_front()\n반복 while문과 제어 조건 문을 사용\n기본 함수 : move(), turn_left(), take(), toss()테스트 조건: object_here(), carries_object(), front_is_clear(), wall_in_front()반복 while문과 제어 조건 문을 사용난이도: 4","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef turn_around():\n    turn_left()\n    turn_left()\n    \nwhile front_is_clear():\n    move()\n    while object_here():\n        take()\n\nturn_around()\nrepeat 5:\n    move()\n\nturn_right()    \n    \nwhile carries_object():\n    toss() "},{"path":"storm.html","id":"실행결과-28","chapter":"10 폭풍 후에 …","heading":"10.1.1 실행결과","text":"","code":""},{"path":"storm.html","id":"코드-28","chapter":"10 폭풍 후에 …","heading":"10.1.2 코드","text":"","code":"def turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef turn_around():\n    turn_left()\n    turn_left()\n    \nwhile front_is_clear():\n    move()\n    while object_here():\n        take()\n\nturn_around()\nrepeat 5:\n    move()\n\nturn_right()    \n    \nwhile carries_object():\n    toss() "},{"path":"storm.html","id":"storm-02","chapter":"10 폭풍 후에 …","heading":"10.2 낙엽 청소 2","text":"문제 바로가기선행 지식\n기본 함수 : move(), turn_left(), take(), toss()\n테스트 조건: object_here(), carries_object(), front_is_clear(), wall_in_front()\n반복 while문과 제어 조건 문을 사용\n기본 함수 : move(), turn_left(), take(), toss()테스트 조건: object_here(), carries_object(), front_is_clear(), wall_in_front()반복 while문과 제어 조건 문을 사용난이도: 4","code":"def turn_around():\n    turn_left()\n    turn_left()\n\ndef turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef collect_leaves():\n    while front_is_clear():\n        while object_here():\n            take()\n        move()\n        \ndef first_collect_leaves():\n    while front_is_clear():\n        while object_here():\n            take()\n        move()            \n    turn_around()\n    repeat 4:\n        move()\n    turn_right()\n    move()\n    turn_right()\n    collect_leaves()\n    turn_left()\n    move()\n    turn_left()\n            \ndef go_to_beginning():\n    while object_here():\n        take()    \n    turn_around()\n    while not wall_in_front():\n        move()\n    turn_left()\n    move()\n    turn_left()    \n\ndef go_to_home():\n    while not wall_in_front():\n        move()\n        while object_here():\n            take()\n    turn_left()\n    while not at_goal():\n        if front_is_clear():\n            move()\n        elif right_is_clear():\n            turn_right()\n        elif wall_in_front():\n           turn_left()\n    turn_right()\n    while carries_object():\n        toss()\n        \nmove()    \nfirst_collect_leaves()\nrepeat 3:\n    collect_leaves()\n    go_to_beginning()\n\n\ngo_to_home()"},{"path":"storm.html","id":"실행결과-29","chapter":"10 폭풍 후에 …","heading":"10.2.1 실행결과","text":"","code":""},{"path":"storm.html","id":"코드-29","chapter":"10 폭풍 후에 …","heading":"10.2.2 코드","text":"","code":"def turn_around():\n    turn_left()\n    turn_left()\n\ndef turn_right():\n    turn_left()\n    turn_left()\n    turn_left()\n\ndef collect_leaves():\n    while front_is_clear():\n        while object_here():\n            take()\n        move()\n        \ndef first_collect_leaves():\n    while front_is_clear():\n        while object_here():\n            take()\n        move()            \n    turn_around()\n    repeat 4:\n        move()\n    turn_right()\n    move()\n    turn_right()\n    collect_leaves()\n    turn_left()\n    move()\n    turn_left()\n            \ndef go_to_beginning():\n    while object_here():\n        take()    \n    turn_around()\n    while not wall_in_front():\n        move()\n    turn_left()\n    move()\n    turn_left()    \n\ndef go_to_home():\n    while not wall_in_front():\n        move()\n        while object_here():\n            take()\n    turn_left()\n    while not at_goal():\n        if front_is_clear():\n            move()\n        elif right_is_clear():\n            turn_right()\n        elif wall_in_front():\n           turn_left()\n    turn_right()\n    while carries_object():\n        toss()\n        \nmove()    \nfirst_collect_leaves()\nrepeat 3:\n    collect_leaves()\n    go_to_beginning()\n\n\ngo_to_home()"}]
